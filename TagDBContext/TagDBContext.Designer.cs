//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("TagDBModel", "FK_dbo_Comments_dbo_TagValues_TagKey", "TagValues", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TagDBContext.TagValue), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TagDBContext.Comment), true)]
[assembly: EdmRelationshipAttribute("TagDBModel", "FK_Groups_Groups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TagDBContext.Group), "Groups1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TagDBContext.Group), true)]
[assembly: EdmRelationshipAttribute("TagDBModel", "FK_dbo_Tags_dbo_Params_ParamTag", "Params", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TagDBContext.Param), "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TagDBContext.Tag), true)]
[assembly: EdmRelationshipAttribute("TagDBModel", "FK_dbo_TagValues_dbo_Tags_TagID", "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TagDBContext.Tag), "TagValues", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TagDBContext.TagValue), true)]
[assembly: EdmRelationshipAttribute("TagDBModel", "TagGroups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TagDBContext.Group), "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TagDBContext.Tag))]

#endregion

namespace TagDBContext
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class TagDBEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект TagDBEntities, используя строку соединения из раздела "TagDBEntities" файла конфигурации приложения.
        /// </summary>
        public TagDBEntities() : base("name=TagDBEntities", "TagDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта TagDBEntities.
        /// </summary>
        public TagDBEntities(string connectionString) : base(connectionString, "TagDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта TagDBEntities.
        /// </summary>
        public TagDBEntities(EntityConnection connection) : base(connection, "TagDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Param> Params
        {
            get
            {
                if ((_Params == null))
                {
                    _Params = base.CreateObjectSet<Param>("Params");
                }
                return _Params;
            }
        }
        private ObjectSet<Param> _Params;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TagValue> TagValues
        {
            get
            {
                if ((_TagValues == null))
                {
                    _TagValues = base.CreateObjectSet<TagValue>("TagValues");
                }
                return _TagValues;
            }
        }
        private ObjectSet<TagValue> _TagValues;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Comments. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Groups. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Params. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToParams(Param param)
        {
            base.AddObject("Params", param);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Tags. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TagValues. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTagValues(TagValue tagValue)
        {
            base.AddObject("TagValues", tagValue);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TagDBModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Comment.
        /// </summary>
        /// <param name="commentID">Исходное значение свойства CommentID.</param>
        /// <param name="tagKey">Исходное значение свойства TagKey.</param>
        public static Comment CreateComment(global::System.Int32 commentID, global::System.Int32 tagKey)
        {
            Comment comment = new Comment();
            comment.CommentID = commentID;
            comment.TagKey = tagKey;
            return comment;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentID
        {
            get
            {
                return _CommentID;
            }
            set
            {
                if (_CommentID != value)
                {
                    OnCommentIDChanging(value);
                    ReportPropertyChanging("CommentID");
                    _CommentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentID");
                    OnCommentIDChanged();
                }
            }
        }
        private global::System.Int32 _CommentID;
        partial void OnCommentIDChanging(global::System.Int32 value);
        partial void OnCommentIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Posted
        {
            get
            {
                return _Posted;
            }
            set
            {
                OnPostedChanging(value);
                ReportPropertyChanging("Posted");
                _Posted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Posted");
                OnPostedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Posted;
        partial void OnPostedChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagKey
        {
            get
            {
                return _TagKey;
            }
            set
            {
                OnTagKeyChanging(value);
                ReportPropertyChanging("TagKey");
                _TagKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagKey");
                OnTagKeyChanged();
            }
        }
        private global::System.Int32 _TagKey;
        partial void OnTagKeyChanging(global::System.Int32 value);
        partial void OnTagKeyChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TagDBModel", "FK_dbo_Comments_dbo_TagValues_TagKey", "TagValues")]
        public TagValue TagValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagValue>("TagDBModel.FK_dbo_Comments_dbo_TagValues_TagKey", "TagValues").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagValue>("TagDBModel.FK_dbo_Comments_dbo_TagValues_TagKey", "TagValues").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TagValue> TagValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagValue>("TagDBModel.FK_dbo_Comments_dbo_TagValues_TagKey", "TagValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TagValue>("TagDBModel.FK_dbo_Comments_dbo_TagValues_TagKey", "TagValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TagDBModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Group.
        /// </summary>
        /// <param name="groupID">Исходное значение свойства GroupID.</param>
        public static Group CreateGroup(global::System.Int32 groupID)
        {
            Group group = new Group();
            group.GroupID = groupID;
            return group;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                if (_GroupID != value)
                {
                    OnGroupIDChanging(value);
                    ReportPropertyChanging("GroupID");
                    _GroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupID");
                    OnGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupID;
        partial void OnGroupIDChanging(global::System.Int32 value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TagDBModel", "FK_Groups_Groups", "Groups1")]
        public EntityCollection<Group> Groups1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("TagDBModel.FK_Groups_Groups", "Groups1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("TagDBModel.FK_Groups_Groups", "Groups1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TagDBModel", "FK_Groups_Groups", "Groups")]
        public Group Group1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("TagDBModel.FK_Groups_Groups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("TagDBModel.FK_Groups_Groups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> Group1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("TagDBModel.FK_Groups_Groups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("TagDBModel.FK_Groups_Groups", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TagDBModel", "TagGroups", "Tags")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("TagDBModel.TagGroups", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("TagDBModel.TagGroups", "Tags", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TagDBModel", Name="Param")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Param : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Param.
        /// </summary>
        /// <param name="paramTag">Исходное значение свойства ParamTag.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="measure">Исходное значение свойства Measure.</param>
        public static Param CreateParam(global::System.String paramTag, global::System.String name, global::System.String measure)
        {
            Param param = new Param();
            param.ParamTag = paramTag;
            param.Name = name;
            param.Measure = measure;
            return param;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParamTag
        {
            get
            {
                return _ParamTag;
            }
            set
            {
                if (_ParamTag != value)
                {
                    OnParamTagChanging(value);
                    ReportPropertyChanging("ParamTag");
                    _ParamTag = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ParamTag");
                    OnParamTagChanged();
                }
            }
        }
        private global::System.String _ParamTag;
        partial void OnParamTagChanging(global::System.String value);
        partial void OnParamTagChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                OnMeasureChanging(value);
                ReportPropertyChanging("Measure");
                _Measure = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Measure");
                OnMeasureChanged();
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TagDBModel", "FK_dbo_Tags_dbo_Params_ParamTag", "Tags")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("TagDBModel.FK_dbo_Tags_dbo_Params_ParamTag", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("TagDBModel.FK_dbo_Tags_dbo_Params_ParamTag", "Tags", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TagDBModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Tag.
        /// </summary>
        /// <param name="tagID">Исходное значение свойства TagID.</param>
        /// <param name="paramTag">Исходное значение свойства ParamTag.</param>
        public static Tag CreateTag(global::System.Int32 tagID, global::System.String paramTag)
        {
            Tag tag = new Tag();
            tag.TagID = tagID;
            tag.ParamTag = paramTag;
            return tag;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                if (_TagID != value)
                {
                    OnTagIDChanging(value);
                    ReportPropertyChanging("TagID");
                    _TagID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TagID");
                    OnTagIDChanged();
                }
            }
        }
        private global::System.Int32 _TagID;
        partial void OnTagIDChanging(global::System.Int32 value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParamTag
        {
            get
            {
                return _ParamTag;
            }
            set
            {
                OnParamTagChanging(value);
                ReportPropertyChanging("ParamTag");
                _ParamTag = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParamTag");
                OnParamTagChanged();
            }
        }
        private global::System.String _ParamTag;
        partial void OnParamTagChanging(global::System.String value);
        partial void OnParamTagChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TagDBModel", "FK_dbo_Tags_dbo_Params_ParamTag", "Params")]
        public Param Param
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Param>("TagDBModel.FK_dbo_Tags_dbo_Params_ParamTag", "Params").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Param>("TagDBModel.FK_dbo_Tags_dbo_Params_ParamTag", "Params").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Param> ParamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Param>("TagDBModel.FK_dbo_Tags_dbo_Params_ParamTag", "Params");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Param>("TagDBModel.FK_dbo_Tags_dbo_Params_ParamTag", "Params", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TagDBModel", "FK_dbo_TagValues_dbo_Tags_TagID", "TagValues")]
        public EntityCollection<TagValue> TagValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagValue>("TagDBModel.FK_dbo_TagValues_dbo_Tags_TagID", "TagValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagValue>("TagDBModel.FK_dbo_TagValues_dbo_Tags_TagID", "TagValues", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TagDBModel", "TagGroups", "Groups")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("TagDBModel.TagGroups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("TagDBModel.TagGroups", "Groups", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TagDBModel", Name="TagValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TagValue : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TagValue.
        /// </summary>
        /// <param name="tagKey">Исходное значение свойства TagKey.</param>
        /// <param name="tagID">Исходное значение свойства TagID.</param>
        /// <param name="dateTime">Исходное значение свойства DateTime.</param>
        /// <param name="value">Исходное значение свойства Value.</param>
        public static TagValue CreateTagValue(global::System.Int32 tagKey, global::System.Int32 tagID, global::System.DateTime dateTime, global::System.Double value)
        {
            TagValue tagValue = new TagValue();
            tagValue.TagKey = tagKey;
            tagValue.TagID = tagID;
            tagValue.DateTime = dateTime;
            tagValue.Value = value;
            return tagValue;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagKey
        {
            get
            {
                return _TagKey;
            }
            set
            {
                if (_TagKey != value)
                {
                    OnTagKeyChanging(value);
                    ReportPropertyChanging("TagKey");
                    _TagKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TagKey");
                    OnTagKeyChanged();
                }
            }
        }
        private global::System.Int32 _TagKey;
        partial void OnTagKeyChanging(global::System.Int32 value);
        partial void OnTagKeyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private global::System.Int32 _TagID;
        partial void OnTagIDChanging(global::System.Int32 value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Double _Value;
        partial void OnValueChanging(global::System.Double value);
        partial void OnValueChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TagDBModel", "FK_dbo_Comments_dbo_TagValues_TagKey", "Comments")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("TagDBModel.FK_dbo_Comments_dbo_TagValues_TagKey", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("TagDBModel.FK_dbo_Comments_dbo_TagValues_TagKey", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TagDBModel", "FK_dbo_TagValues_dbo_Tags_TagID", "Tags")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("TagDBModel.FK_dbo_TagValues_dbo_Tags_TagID", "Tags").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("TagDBModel.FK_dbo_TagValues_dbo_Tags_TagID", "Tags").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("TagDBModel.FK_dbo_TagValues_dbo_Tags_TagID", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("TagDBModel.FK_dbo_TagValues_dbo_Tags_TagID", "Tags", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
